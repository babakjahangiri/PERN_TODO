[{"/Users/babak/Projects/Excer/PERN-TODO/client/src/index.js":"1","/Users/babak/Projects/Excer/PERN-TODO/client/src/App.js":"2","/Users/babak/Projects/Excer/PERN-TODO/client/src/components/AddTodo.js":"3","/Users/babak/Projects/Excer/PERN-TODO/client/src/components/ListTodo.js":"4","/Users/babak/Projects/Excer/PERN-TODO/client/src/components/EditTodo.js":"5"},{"size":219,"mtime":1610418450513,"results":"6","hashOfConfig":"7"},{"size":329,"mtime":1610473389096,"results":"8","hashOfConfig":"7"},{"size":970,"mtime":1610473311661,"results":"9","hashOfConfig":"7"},{"size":1650,"mtime":1610475308951,"results":"10","hashOfConfig":"7"},{"size":2367,"mtime":1610500966573,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"bgtqb7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/babak/Projects/Excer/PERN-TODO/client/src/index.js",[],["26","27"],"/Users/babak/Projects/Excer/PERN-TODO/client/src/App.js",[],"/Users/babak/Projects/Excer/PERN-TODO/client/src/components/AddTodo.js",["28"],"import React, { Fragment, useState } from 'react';\n\nconst AddTodo = () => {\n  const [description, setDescription] = useState('');\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n\n    try {\n      const body = { description };\n      const response = await fetch('http://localhost:5000/todo', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n\n      window.location = '/';\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return (\n    <Fragment>\n      <h1 className='text-center mt-5'>PERN Todo List</h1>\n      <form className='d-flex mt-5' onSubmit={onSubmitForm}>\n        <input\n          type='text'\n          className='form-control'\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button className='btn btn-success'>Add </button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default AddTodo;\n","/Users/babak/Projects/Excer/PERN-TODO/client/src/components/ListTodo.js",["29"],"import React, { Fragment, useEffect, useState } from 'react';\nimport EditTodo from './EditTodo';\n\nconst ListTodo = () => {\n  const [todos, setTodos] = useState([]);\n\n  const deleteTodo = async (id) => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todo/${id}`, {\n        method: 'DELETE',\n      });\n\n      setTodos(todos.filter((todo) => todo.todo_id !== id));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/todolist');\n      const jsonData = await response.json();\n\n      setTodos(jsonData);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  return (\n    <Fragment>\n      <table className='table mt-5 text-center'>\n        <thead>\n          <tr>\n            <th scope='col'>#</th>\n            <th scope='col'>Description</th>\n            <th scope='col'>Edit</th>\n            <th scope='col'>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((todo, index) => (\n            <tr key={todo.todo_id}>\n              <td>{index + 1}</td>\n              <td>{todo.description}</td>\n              <td>\n                <EditTodo todo={todo} />\n              </td>\n              <td>\n                <button\n                  className='btn btn-danger'\n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListTodo;\n","/Users/babak/Projects/Excer/PERN-TODO/client/src/components/EditTodo.js",["30"],"import React, { Fragment, useState } from 'react';\n\nconst EditTodo = ({ todo }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  const saveTodo = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { description };\n      const response = await fetch(\n        `http://localhost:5000/todo/${todo.todo_id}`,\n        {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body),\n        }\n      );\n\n      window.location = '/';\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return (\n    <Fragment>\n      <button\n        type='button'\n        className='btn btn-warning'\n        data-toggle='modal'\n        data-target={`#todo${todo.todo_id}`}\n      >\n        Edit\n      </button>\n      {/*\n        id = todo2\n      */}\n      <div\n        className='modal'\n        id={`todo${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div className='modal-dialog'>\n          <div className='modal-content'>\n            <div className='modal-header'>\n              <h4 className='modal-title'>Edit Todo</h4>\n              <button\n                type='button'\n                className='close'\n                data-dismiss='modal'\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div className='modal-body'>\n              <input\n                type='text'\n                className='form-control'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></input>\n            </div>\n\n            <div className='modal-footer'>\n              <button\n                type='button'\n                className='btn btn-primary'\n                data-dismiss='modal'\n                onClick={(e) => saveTodo(e)}\n              >\n                Save\n              </button>\n              <button\n                type='button'\n                className='btn btn-danger'\n                data-dismiss='modal'\n                onClick={() => setDescription(todo.description)}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":11,"column":13,"nodeType":"37","messageId":"38","endLine":11,"endColumn":21},{"ruleId":"35","severity":1,"message":"39","line":9,"column":13,"nodeType":"37","messageId":"38","endLine":9,"endColumn":23},{"ruleId":"35","severity":1,"message":"36","line":10,"column":13,"nodeType":"37","messageId":"38","endLine":10,"endColumn":21},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]